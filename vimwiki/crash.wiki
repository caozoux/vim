rdi, rsi, rdx, rcx, r8, r9。 。当参数为 7 个以上时， 前 6 个与前面一样， 但后面的依次从 "右向左" 放入栈中
= list =
	p net_namespace_list
	list -o net.list -s net.ipvs -H 0xffffffff881871f0
	mod -s ip_vs /home/zc/github/cache/kernel-4.18/net/netfilter/ipvs/ip_vs.ko
	list ip_vs_proto_data.next 0xffff88b87d3b94c0
	* o
	* 
= gdb  =
	* gdb module as addrline
		1. list *(some_function+0x12c)
		2. 
= vmlinux  =
	* get source line (xt_replace_table+0x96)
	* gdb vmlinux -> dis xt_replace_table 得到 -》0xffffffff816ad736 <+150>:	mov    %rax,(%r14)
	* addr2line -f -e cache/kernel-4.18/vmlinux 0xffffffff816ad736 -> /home/zc/github/kernel-4.18.0/net/netfilter/x_tables.c:1328
	
= cmd =
== kmem ==
== list ==
	* -h list -o xt_table.list  -s xt_table.name -h 0xffffa0c4d7992be8
	* -H  list -o net.list -s net.ipvs -H 0xffffffff881871f0
		1. p net_namespace_list 这个是指针头部，地址是0xffffffff881871f0
	* -H  list -o net.list -s net.ipvs -H 0xffffffff881871f0
	* list -o rwsem_waiter.list -s rwsem_waiter.type -h 0xffffb9cbc15c3dc0

== search ==
== sym ==
== ptov==
== percpu ==
	* 获取每个cpu变量的基址
		1. kmem -o
			1. CPU 0: ffff8f0080200000
			2. CPU 1: ffff8f0080240000
			3. CPU 2: ffff8f0080280000
			4. CPU 3: ffff8f00802c0000
			5. CPU 42: ffff8f313f400000
		2. struct kmem_cash.cpu_slub
			  crash> struct kmem_cache.cpu_slab 0xffff8ed2070aadc0 -x
			  cpu_slab = 0x2b4c0		
			a) 	
		3. struct kmem_cash.cpu_slub:42 =  ffff8f313f400000 + 0x2b4c0



 
  
  




